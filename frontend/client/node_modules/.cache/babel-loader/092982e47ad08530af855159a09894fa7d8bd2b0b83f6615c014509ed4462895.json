{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\SUCCESSFUL PROJECTS\\\\Jora mall\\\\frontend\\\\client\\\\src\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from './AuthContext'; // Import useAuth hook to access custom modal utility\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const navigate = useNavigate(); // Hook for programmatic navigation\n  const {\n    showCustomModal\n  } = useAuth(); // Get custom modal utility from AuthContext\n\n  // State to hold the form input values for username, email, and password\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  // State to manage the loading status during the registration API call\n  const [loading, setLoading] = useState(false);\n  // State to store and display any error messages from the registration process\n  const [error, setError] = useState(null);\n  // State to indicate successful registration (used for displaying a temporary message)\n  const [success, setSuccess] = useState(false);\n\n  // Handler for changes in the input fields. Updates the formData state.\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value // Dynamically update the field corresponding to the input's 'name' attribute\n    }));\n  };\n\n  // Handler for the form submission. This function sends the registration request to the backend.\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent the default form submission behavior (page reload)\n    setLoading(true); // Set loading state to true\n    setError(null); // Clear any previous error messages\n    setSuccess(false); // Clear previous success state\n\n    try {\n      // Send a POST request to your backend's registration API endpoint\n      const response = await fetch('https://jora-mall-backend.onrender.com/api/auth/register', {\n        method: 'POST',\n        // HTTP method\n        headers: {\n          'Content-Type': 'application/json' // Specify that the request body is JSON\n        },\n        body: JSON.stringify(formData) // Convert formData object to a JSON string\n      });\n\n      // Check if the HTTP response was successful (status code 200-299)\n      if (!response.ok) {\n        // If not successful, parse the error response from the backend\n        const errorData = await response.json();\n        // Throw an error with the message provided by the backend, or a generic HTTP error message\n        throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\n      }\n\n      // If the response is successful, parse the success data (user info, token)\n      const data = await response.json();\n      console.log('Registration successful:', data);\n      setSuccess(true); // Set success state to true\n\n      // Show a success message using the custom modal\n      showCustomModal('Registration successful! Please log in.', () => {\n        navigate('/login'); // After the user clicks OK on the modal, navigate to the login page\n      });\n    } catch (err) {\n      console.error('Error during registration:', err); // Log the detailed error to the console for debugging\n      setError(err.message); // Set the error message to display on the form\n      showCustomModal(`Registration failed: ${err.message}`); // Show the error message in the custom modal\n    } finally {\n      setLoading(false); // Reset loading state to false, whether registration succeeded or failed\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-[#000080] p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-8 rounded-xl shadow-lg w-full max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold text-gray-800 text-center mb-6\",\n        children: \"Register Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            name: \"username\",\n            value: formData.username,\n            onChange: handleChange,\n            className: \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\",\n            required: true // HTML5 validation: field must not be empty\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleChange,\n            className: \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\",\n            required: true // HTML5 validation: field must not be empty\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            value: formData.password,\n            onChange: handleChange,\n            className: \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\",\n            required: true // HTML5 validation: field must not be empty\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-600 text-sm text-center\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-green-600 text-sm text-center\",\n          children: \"Registration successful! Redirecting to login...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",\n          disabled: loading // Disable the button while an API call is in progress\n          ,\n          children: [loading ? 'Registering...' : 'Register', \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-6 text-center text-sm text-gray-600\",\n        children: [\"Already have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"font-medium text-blue-600 hover:text-blue-500\",\n          children: \"Login here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"2g107IxwxDAApenEeL8efL3Tn3k=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = Register;\nexport default Register; // Export the Register component for use in App.js\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Link","useNavigate","useAuth","jsxDEV","_jsxDEV","Register","_s","navigate","showCustomModal","formData","setFormData","username","email","password","loading","setLoading","error","setError","success","setSuccess","handleChange","e","name","value","target","prevData","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","message","status","data","console","log","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","disabled","to","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/SUCCESSFUL PROJECTS/Jora mall/frontend/client/src/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from './AuthContext'; // Import useAuth hook to access custom modal utility\r\n\r\nfunction Register() {\r\n  const navigate = useNavigate(); // Hook for programmatic navigation\r\n  const { showCustomModal } = useAuth(); // Get custom modal utility from AuthContext\r\n\r\n  // State to hold the form input values for username, email, and password\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n  // State to manage the loading status during the registration API call\r\n  const [loading, setLoading] = useState(false);\r\n  // State to store and display any error messages from the registration process\r\n  const [error, setError] = useState(null);\r\n  // State to indicate successful registration (used for displaying a temporary message)\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  // Handler for changes in the input fields. Updates the formData state.\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value, // Dynamically update the field corresponding to the input's 'name' attribute\r\n    }));\r\n  };\r\n\r\n  // Handler for the form submission. This function sends the registration request to the backend.\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault(); // Prevent the default form submission behavior (page reload)\r\n    setLoading(true); // Set loading state to true\r\n    setError(null); // Clear any previous error messages\r\n    setSuccess(false); // Clear previous success state\r\n\r\n    try {\r\n      // Send a POST request to your backend's registration API endpoint\r\n      const response = await fetch('https://jora-mall-backend.onrender.com/api/auth/register', {\r\n        method: 'POST', // HTTP method\r\n        headers: {\r\n          'Content-Type': 'application/json', // Specify that the request body is JSON\r\n        },\r\n        body: JSON.stringify(formData), // Convert formData object to a JSON string\r\n      });\r\n\r\n      // Check if the HTTP response was successful (status code 200-299)\r\n      if (!response.ok) {\r\n        // If not successful, parse the error response from the backend\r\n        const errorData = await response.json();\r\n        // Throw an error with the message provided by the backend, or a generic HTTP error message\r\n        throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      // If the response is successful, parse the success data (user info, token)\r\n      const data = await response.json();\r\n      console.log('Registration successful:', data);\r\n      setSuccess(true); // Set success state to true\r\n\r\n      // Show a success message using the custom modal\r\n      showCustomModal('Registration successful! Please log in.', () => {\r\n        navigate('/login'); // After the user clicks OK on the modal, navigate to the login page\r\n      });\r\n\r\n    } catch (err) {\r\n      console.error('Error during registration:', err); // Log the detailed error to the console for debugging\r\n      setError(err.message); // Set the error message to display on the form\r\n      showCustomModal(`Registration failed: ${err.message}`); // Show the error message in the custom modal\r\n    } finally {\r\n      setLoading(false); // Reset loading state to false, whether registration succeeded or failed\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-[#000080] p-4\">\r\n      <div className=\"bg-white p-8 rounded-xl shadow-lg w-full max-w-md\">\r\n        <h2 className=\"text-3xl font-bold text-gray-800 text-center mb-6\">Register Account</h2>\r\n        <form onSubmit={handleSubmit} className=\"space-y-5\">\r\n          {/* Username input field */}\r\n          <div>\r\n            <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700\">Username</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              name=\"username\"\r\n              value={formData.username}\r\n              onChange={handleChange}\r\n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n              required // HTML5 validation: field must not be empty\r\n            />\r\n          </div>\r\n          {/* Email input field */}\r\n          <div>\r\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n              required // HTML5 validation: field must not be empty\r\n            />\r\n          </div>\r\n          {/* Password input field */}\r\n          <div>\r\n            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n              required // HTML5 validation: field must not be empty\r\n            />\r\n          </div>\r\n\r\n          {/* Display error message if the `error` state is not null */}\r\n          {error && (\r\n            <p className=\"text-red-600 text-sm text-center\">{error}</p>\r\n          )}\r\n          {/* Display success message if the `success` state is true (will be short-lived due to redirect) */}\r\n          {success && (\r\n            <p className=\"text-green-600 text-sm text-center\">Registration successful! Redirecting to login...</p>\r\n          )}\r\n\r\n          {/* Register button */}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n            disabled={loading} // Disable the button while an API call is in progress\r\n          >\r\n            {loading ? 'Registering...' : 'Register'} {/* Change button text based on loading state */}\r\n          </button>\r\n        </form>\r\n        {/* Link to the login page for existing users */}\r\n        <p className=\"mt-6 text-center text-sm text-gray-600\">\r\n          Already have an account?{' '}\r\n          <Link to=\"/login\" className=\"font-medium text-blue-600 hover:text-blue-500\">\r\n            Login here\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register; // Export the Register component for use in App.js\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}